// Apply the java plugin to add support for Java
apply plugin: 'java'
// Add application plugin for installApp and run tasks
apply plugin: 'application'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// Add our own sourceSets!
// http://www.gradle.org/docs/current/dsl/org.gradle.api.tasks.SourceSet.html
sourceSets {
    selenium
    seleniumXvfb
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.5'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.11'

    // Adding ICNDBClient dependency
    compile 'net.joningi:icndb-java-api:1.0'

    // Adding Spark dependency
    compile 'com.sparkjava:spark-core:1.1.1'

    // Selenium dependencies
    seleniumCompile 'junit:junit:4.11'
    seleniumCompile 'org.seleniumhq.selenium:selenium-java:2.39.0'

    // Selenium in headless mode
    seleniumXvfbCompile 'junit:junit:4.11'
    seleniumXvfbCompile 'org.seleniumhq.selenium:selenium-java:2.39.0'
}

// Add instructions for application plugin
mainClassName = "is.ru.sparkit.ChuckWeb"

task selenium(type: Test, dependsOn: installApp) {
    testClassesDir = sourceSets.selenium.output.classesDir
    classpath = sourceSets.selenium.runtimeClasspath

    doFirst {
        // Start Spark web app in background
        // **NOTE** This will NOT work on Windows - the path is not correct.
        // You can modify this line to make it work.
        'build/install/sparkit/bin/sparkit &'.execute()
    }
}

task seleniumXvfb(type: Test, dependsOn: installApp) {
    testClassesDir = sourceSets.selenium.output.classesDir
    classpath = sourceSets.selenium.runtimeClasspath

    doFirst {
        exec {
            // Start X virtual frame buffer
            // Needed to run Firefox on gui-less server
            commandLine 'bin/xvfb'
            args 'start'
        }
        // Start Spark web app in background
        'build/install/sparkIt/bin/sparkIt &'.execute()
    }
    
    doLast {
        exec {
            commandLine 'bin/xvfb'
            args 'stop'
        }
    }
}
